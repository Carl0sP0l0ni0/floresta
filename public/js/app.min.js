/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ (() => {

eval("var load = $('#load'),\n    loadError = $('#load-error'),\n    divManageTable = $('#manage-table'),\n    formEdit = $('#form-edit');\nvar closeBill = $('#close-bill'),\n    payBill = $('#pay-bill');\nvar tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\nvar lastId,\n    manageTableId,\n    valueTotal,\n    peoplesPay,\n    capacity,\n    sum = 0;\ntooltipTriggerList.map(function (tooltipTriggerEl) {\n  return new bootstrap.Tooltip(tooltipTriggerEl);\n});\n$('.needs-validation').on('submit', function (e) {\n  if (!this.checkValidity()) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  $(this).addClass('was-validated');\n});\n$('#show-pass').on('click', function () {\n  var passwordInput = $('#password');\n\n  if (passwordInput.attr('type') === 'password') {\n    passwordInput.attr('type', 'text');\n    $('#icon-show-pass').removeClass('bi-eye-fill').addClass('bi-eye-slash-fill');\n    $('#text-show-pass').html('Esconder');\n  } else {\n    passwordInput.attr('type', 'password');\n    $('#icon-show-pass').removeClass('bi-eye-slash-fill').addClass('bi-eye-fill');\n    $('#text-show-pass').html('Mostrar');\n  }\n});\n$('#edit-value').on('show.bs.modal', function (e) {\n  var data = e.relatedTarget,\n      url = data.getAttribute('data-action'),\n      productId = data.getAttribute('data-product-id'),\n      value = data.getAttribute('data-value');\n  var name = $('#name-' + productId).html();\n  name = name.toUpperCase() === name ? name : name.toLowerCase();\n  $('#name-product').html(name);\n  $('#value-product').val(value);\n  formEdit.attr('action', url);\n});\n$('#edit-capacity').on('show.bs.modal', function (e) {\n  var data = e.relatedTarget,\n      tableId = data.getAttribute('data-table-id'),\n      url = data.getAttribute('data-action'),\n      capacity = data.getAttribute('data-capacity');\n  $('#edit-table-id').html(tableId);\n  $('#capacity-table').val(capacity);\n  formEdit.attr('action', url);\n});\n$('#delete-table').on('show.bs.modal', confirmDelete);\n$('#delete-product').on('show.bs.modal', confirmDelete);\n$('#manage-table-close').on('click', function () {\n  return divManageTable.addClass('d-none');\n});\n$('#period-payment').on('change', function () {\n  return $('#form-select').trigger('submit');\n});\n$('#detail-table').on('show.bs.modal', function (e) {\n  getDetails('table', e.relatedTarget.getAttribute('data-table-id'));\n});\n$('#detail-order').on('show.bs.modal', function (e) {\n  console.log(e.relatedTarget.getAttribute('data-order-id'), \"no se que hace esto\");\n  getDetails('order', e.relatedTarget.getAttribute('data-order-id'));\n});\n$('.btn-manage-table').on('click', function () {\n  var _this = this;\n\n  var tableId = $(this).data('table-id'),\n      divManage = $('#manage'),\n      btnManage = $('#btn-manage');\n  window.location = '#manage-table';\n  load.removeClass('d-none');\n  loadError.addClass('d-none');\n  divManage.addClass('d-none');\n  btnManage.addClass('d-none');\n  $('#manage-table-id').html(tableId);\n  divManageTable.removeClass('d-none');\n  var tableIdToString = tableId.toString();\n  var newDetails = apiDetails.replace(/\\/0\\//, \"/\".concat(tableIdToString, \"/\"));\n  $.get(newDetails).done(function (data) {\n    load.addClass('d-none');\n    divManage.removeClass('d-none');\n    btnManage.removeClass('d-none');\n    var productsHTML = generateDetailsHTML(data, false, false);\n    var btnVacantTable = $('#btn-vacant-table');\n    manageTableId = tableId;\n    $('#quantity-people-table').attr('max', $(_this).data('capacity'));\n\n    if (typeof data[0] === 'undefined') {\n      $('#btn-close-bill').addClass('d-none');\n      btnVacantTable.removeClass('d-none');\n      btnVacantTable.attr('href', btnVacantTable.data('href') + '/' + tableId);\n    } else {\n      btnVacantTable.addClass('d-none');\n      $('#btn-close-bill').removeClass('d-none');\n      valueTotal = data.sum;\n    }\n\n    $('#products').html(productsHTML);\n    $('#total-products').html(data.total);\n  }).fail(function (error) {\n    load.addClass('d-none');\n    divManage.addClass('d-none');\n    loadError.removeClass('d-none');\n  });\n}); //AÃ‘ADIR PRODUCTOs\n\n$('#add-products').on('show.bs.modal', function () {\n  //funcion void\n  var productsJSON = $('#products-add-json'),\n      formAddProducts = $('#form-add-products');\n  $('#add-table-id').html(manageTableId);\n  $('#form-product').removeClass('was-validated').trigger('reset');\n  formAddProducts.attr('action', formAddProducts.data('action') + '/' + manageTableId);\n  productsJSON.val(productsJSON.attr('data-value'));\n  sum = 0;\n  $('#total-add-products').html(\"S/. \" + sum);\n  $('#products-add').html(generateAddHTML(null));\n});\n$('#form-product').on('submit', function (e) {\n  console.log('submit mi king');\n  e.preventDefault();\n\n  if (!this.checkValidity()) {\n    e.stopPropagation();\n    $(this).addClass('was-validated');\n  } else {\n    $(this).addClass('was-validated');\n    var option = $('#add-product-id :selected'),\n        productsJSON = $('#products-add-json'),\n        productId = option.val(),\n        name = option.html(),\n        valueUnitary = parseFloat(option.data('value')),\n        productsAdd = $('#products-add');\n    var products = JSON.parse(productsJSON.val()),\n        quantity = parseInt($('#add-product-quantity').val());\n\n    if (isZeroValues(products)) {\n      $('#btn-submit-add').prop('disabled', false);\n      productsAdd.html('');\n    }\n\n    products[productId] += quantity;\n    console.log(products, \"aqui products\");\n    productsJSON.val(JSON.stringify(products));\n    if (products[productId] === quantity) productsAdd.append(generateAddHTML(name, valueUnitary, quantity, productId));else {\n      sum += quantity * valueUnitary;\n      $('#products-add-' + productId + '-quantity').html(products[productId]);\n      $('#products-add-' + productId + '-value').html(\"S/. \" + products[productId] * valueUnitary);\n    }\n    $('.products-add-delete').on('click', deleteAddProduct);\n    $('#total-add-products').html(\"S/. \" + sum);\n    $(this).removeClass('was-validated').trigger('reset');\n  }\n});\ncloseBill.on('show.bs.modal', function () {\n  $('#form-close-bill').removeClass('was-validated').trigger('reset');\n  $('#close-table-id').html(manageTableId);\n});\n$('#form-close-bill').on('submit', function (e) {\n  e.preventDefault();\n\n  if (!this.checkValidity()) {\n    e.stopPropagation();\n    $(this).addClass('was-validated');\n  } else {\n    $(this).addClass('was-validated');\n    peoplesPay = parseInt($('#quantity-people-table').val());\n    $('#pay-table-id').html(manageTableId);\n    bootstrap.Modal.getInstance(closeBill).hide();\n    new bootstrap.Modal(payBill).show();\n  }\n});\npayBill.on('show.bs.modal', function () {\n  var formPayBill = $('#form-pay-bill');\n  var value = parseFloat((valueTotal / peoplesPay).toFixed(2));\n  var HTML = generatePayHTML();\n  $('#method-pay-bill').html(HTML);\n  $('#value-pay').html(\"S/. \" + value);\n  formPayBill.removeClass('was-validated');\n  formPayBill.attr('action', formPayBill.data('action') + '/' + manageTableId);\n});\n$(window).on('scroll', function () {\n  if ($(window).scrollTop() > 62) {\n    $('body').css('padding-top', 62);\n  } else {\n    $('body').css('padding-top', $(window).scrollTop());\n  }\n});\n$(window).on('hashchange', function () {\n  return hashChange();\n});\n\nfunction confirmDelete(e) {\n  var data = e.relatedTarget,\n      tableId = data.getAttribute('data-id'),\n      url = data.getAttribute('data-href');\n  $('#delete-id').html(tableId);\n  $('#btn-confirm-delete').attr('href', url);\n}\n\nfunction deleteAddProduct() {\n  var productsJSON = $('#products-add-json'),\n      id = $(this).data('product-id');\n  var products = JSON.parse(productsJSON.val());\n  products[id] = 0;\n  sum -= parseFloat($('#products-add-' + id + '-value').data('value'));\n  productsJSON.val(JSON.stringify(products));\n  $('#total-add-products').html(\"S/. \" + sum);\n  $('#products-add-' + id).remove();\n\n  if (isZeroValues(products)) {\n    $('#btn-submit-add').prop('disabled', true);\n    $('#products-add').html(generateAddHTML(null));\n  }\n}\n\nfunction getDetails(typeData, itemId) {\n  //console.log(\"se ejecuta getDetails\")\n  var divDetail = $('#detail');\n  load.removeClass('d-none');\n  loadError.addClass('d-none');\n  divDetail.addClass('d-none');\n  $('#detail-' + typeData + '-id').html(itemId); //console.log(itemId,\"itemId\")\n  //console.log(apiDetails,\"apiDetails\")\n\n  var newDetails = apiDetails.replace(/\\/0\\//, \"/\".concat(itemId, \"/\"));\n  $.get(newDetails).done(function (data) {\n    load.addClass('d-none');\n    divDetail.removeClass('d-none');\n    var productsHTML = typeData === 'table' ? generateDetailsHTML(data, itemId) : generateDetailsHTML(data);\n    $('#products').html(productsHTML);\n    $('#total-products').html(data.total);\n  }).fail(function (error) {\n    load.addClass('d-none');\n    divDetail.addClass('d-none');\n    loadError.removeClass('d-none');\n    console.log(error);\n  });\n}\n\nfunction generateDetailsHTML(items) {\n  var tableId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var links = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var HTML = '';\n  if (typeof items[0] === 'undefined') HTML = '<li class=\"list-group-item text-muted text-center\">No hay productos en mesa!</li>';else {\n    for (var i = 0; typeof items[i] !== 'undefined'; i++) {\n      var item = items[i];\n      HTML += \"<li class=\\\"list-group-item d-flex justify-content-between lh-sm\\\">\\n                        <div>\\n                            <h6 class=\\\"my-1\\\">\\n                                <span class=\\\"badge bg-primary rounded-pill me-1\\\">\".concat(item['quantity'], \"</span>\");\n      if (links) HTML += \"<a href=\\\"\".concat(productItem, \"#product-\").concat(item.id, \"\\\" class=\\\"text-decoration-none\\\">\").concat(item.name, \"</a>\");else HTML += item.name;\n      HTML += \"</h6>\\n                            <small class=\\\"text-muted\\\">\".concat(item['unitaryValue'], \"</small>\\n                        </div>\\n                        <div>\\n                            <span class=\\\"text-muted me-2\\\">\").concat(item['value'], \"</span>\");\n\n      if (tableId) {\n        HTML += \"<a class=\\\"text-danger fw-bold text-decoration-none\\\"\\n                                 href=\\\"\".concat(deleteItem, \"/\").concat(tableId, \"/\").concat(item.id, \"\\\">\\n                                <i class=\\\"bi bi-x\\\"></i>\\n                              </a>\");\n      }\n\n      HTML += \"</div>\\n                        </li>\";\n    }\n  }\n  return HTML;\n}\n\nfunction generateAddHTML(name) {\n  var valueUnitary = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var quantity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var HTML,\n      value = quantity * valueUnitary;\n  sum += value;\n  if (name === null) HTML = '<li class=\"list-group-item text-muted text-center\">No hay productos que adicionar!</li>';else {\n    HTML = \"<li class=\\\"list-group-item d-flex justify-content-between lh-sm\\\" id=\\\"products-add-\".concat(id, \"\\\">\\n                    <div>\\n                        <h6 class=\\\"my-1\\\">\\n                            <span class=\\\"badge bg-primary rounded-pill me-1\\\" id=\\\"products-add-\").concat(id, \"-quantity\\\">\\n                                \").concat(quantity, \"\\n                            </span>\\n                            \").concat(name, \"\\n                        </h6>\\n                        <small class=\\\"text-muted\\\">\").concat(\"S/. \" + valueUnitary, \"</small>\\n                    </div>\\n                    <div>\\n                        <span class=\\\"text-muted me-2\\\" id=\\\"products-add-\").concat(id, \"-value\\\" data-value=\").concat(value, \">\").concat(\"S/. \" + value, \"</span>\\n                        <a class=\\\"text-danger fw-bold text-decoration-none products-add-delete\\\" data-product-id=\\\"\").concat(id, \"\\\"\\n                            href=\\\"#delete-product\\\">\\n                            <i class=\\\"bi bi-x\\\"></i>\\n                        </a>\\n                    </div>\\n                </li>\");\n  }\n  return HTML;\n}\n\nfunction generatePayHTML() {\n  var HTML = '';\n\n  for (var i = 1; i <= peoplesPay; i++) {\n    HTML += \"<div class=\\\"mt-3\\\">\\n                    <label for=\\\"method-\".concat(i, \"\\\" class=\\\"form-label\\\">Cliente \").concat(i, \" Pagado</label>\\n                    <select class=\\\"form-select\\\" name=\\\"method[]\\\" id=\\\"method-\").concat(i, \"\\\" required>\\n                        <option disabled selected value=\\\"\\\" class=\\\"d-none\\\">Selecione ...</option>\\n                        <option value=\\\"dinheiro\\\">Efectivo</option>\\n                        <option value=\\\"d\\xE9bito\\\">D\\xE9bito</option>\\n                        <option value=\\\"cr\\xE9dito\\\">Cr\\xE9dito</option>\\n                        <option value=\\\"pix\\\">PIX</option>\\n                    </select>\\n                </div>\");\n  }\n\n  return HTML;\n}\n\nfunction currency(num) {\n  return num.toLocaleString('pt-br', {\n    style: 'currency',\n    currency: 'BRL'\n  });\n}\n\nfunction isZeroValues(obj) {\n  var keys = Object.keys(obj);\n  var result = true;\n\n  for (var i = 0; i < keys.length; i++) {\n    if (obj[keys[i]] !== 0) {\n      return false;\n    }\n  }\n\n  return result;\n}\n\nfunction hashChange() {\n  var hash = window.location.hash;\n\n  if (lastId) {\n    $(lastId).removeClass('table-primary');\n  }\n\n  if (hash.startsWith('#product-') || hash.startsWith('#table-')) {\n    if (window.location.hash) {\n      var id = window.location.hash;\n      $(id).addClass('table-primary');\n      lastId = id;\n    }\n  } else {\n    lastId = undefined;\n  }\n}\n\nhashChange();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ "./resources/css/app.css":
/*!*******************************!*\
  !*** ./resources/css/app.css ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvY3NzL2FwcC5jc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Nzcy9hcHAuY3NzP2E1ZTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/css/app.css\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app.min": 0,
/******/ 			"css/app.min": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app.min"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app.min"], () => (__webpack_require__("./resources/css/app.css")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;